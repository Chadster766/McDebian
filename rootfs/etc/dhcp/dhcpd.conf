#
# Sample configuration file for ISC dhcpd for Debian
#
#

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style none;

# option definitions common to all supported networks...
option domain-name "mcdebian.local";
option domain-name-servers 8.8.8.8, 8.8.4.4;

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# No service will be given on this subnet, but declaring it helps the 
# DHCP server to understand the network topology.

#subnet 10.152.187.0 netmask 255.255.255.0 {
#}

# This is a very basic subnet declaration.

#subnet 10.254.239.0 netmask 255.255.255.224 {
#  range 10.254.239.10 10.254.239.20;
#  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
#}

# This declaration allows BOOTP clients to get dynamic addresses,
# which we don't really recommend.

#subnet 10.254.239.32 netmask 255.255.255.224 {
#  range dynamic-bootp 10.254.239.40 10.254.239.60;
#  option broadcast-address 10.254.239.31;
#  option routers rtr-239-32-1.example.org;
#}

# A slightly different configuration for an internal subnet.
#subnet 10.5.5.0 netmask 255.255.255.224 {
#  range 10.5.5.26 10.5.5.30;
#  option domain-name-servers ns1.internal.example.org;
#  option domain-name "internal.example.org";
#  option routers 10.5.5.1;
#  option broadcast-address 10.5.5.31;
#  default-lease-time 600;
#  max-lease-time 7200;
#}

subnet 192.168.1.0 netmask 255.255.255.0 {
 range 192.168.1.100 192.168.1.200;
 option routers 192.168.1.1;
 option broadcast-address 192.168.1.255;
}

# Hosts which require special configuration options can be listed in
# host statements.   If no address is specified, the address will be
# allocated dynamically (if possible), but the host-specific information
# will still come from the host declaration.

#host passacaglia {
#  hardware ethernet 0:0:c0:5d:bd:95;
#  filename "vmunix.passacaglia";
#  server-name "toccata.fugue.com";
#}

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.
#host fantasia {
#  hardware ethernet 08:00:07:26:c0:a5;
#  fixed-address fantasia.fugue.com;
#}

# You can declare a class of clients and then do address allocation
# based on that.   The example below shows a case where all clients
# in a certain class get addresses on the 10.17.224/24 subnet, and all
# other clients get addresses on the 10.0.29/24 subnet.

#class "foo" {
#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
#}

#shared-network 224-29 {
#  subnet 10.17.224.0 netmask 255.255.255.0 {
#    option routers rtr-224.example.org;
#  }
#  subnet 10.0.29.0 netmask 255.255.255.0 {
#    option routers rtr-29.example.org;
#  }
#  pool {
#    allow members of "foo";
#    range 10.17.224.10 10.17.224.250;
#  }
#  pool {
#    deny members of "foo";
#    range 10.0.29.10 10.0.29.230;
#  }
#}

# Example server configuration for routing parameters
# as defined in draft-ietf-mif-dhcpv6-route-option-03

# This statement defines an option layout, not the values.
# NEXT_HOP option with RTPREFIX option included 
#option dhcp6.next-hop-rt-prefix code 242 = { ip6-address, unsigned integer 16, 
#   unsigned integer 16, unsigned integer 32, unsigned integer 8, unsigned integer 8, ip6-address };

# This statement configures actual values to be sent
# RTPREFIX option code = 243, RTPREFIX length = 22 
# lifetime = 9000 seconds 
# route 2001:db8:2::/64 
# metric 1 
#option dhcp6.next-hop-rt-prefix 2001:db8:1::1 243 22 9000 64 1 2001:db8:2::;  

# Simplified mode (NEXT_HOP only, without RTPREFIX) for 
# bandwidth constrained networks. 
# Make sure that only simplified or full mode are uncommented, not both.
# Uncomment this if you want to send simplified default-route information 
#option dhcp6.next-hop code 242 = ip6-address; 
#option dhcp6.next-hop 2001:db8:1::1;  

# Uncomment this if you want to provision information about routes 
# available directly on-link.  

# RTPREFIX option layout definition 
#option dhcp6.rtprefix code 243 = {unsigned integer 32, unsigned integer 8, unsigned integer 8, ip6-address };  

# RTPREFIX option values: 2001:db8:1:1234::/64 prefix
# with lifetime 3600 available on-link, metric 1
#option dhcp6.rtprefix 3600 64 1 2001:db8:1:1234::;  

# This is the usual definition of subnet with range allocated
# for dynamic assignment. 
#subnet6 2001:db8:1:15c::/64 {     

    # Range for clients     
#    range6 2001:db8:1:15c::1:0 2001:db8:1:15c::1:ffff;      

    # standard options     
#    option dhcp6.name-servers 2001:4860:4860::8888, 2001:4860:4860::8844;     
#    option dhcp6.domain-search "mcdebian.local"; 
#}

#Note that you must not mix full (NEXT_HOP with RTPREFIX option inside) and simplified (NEXT_HOP only) notation. Make sure that you have uncommented only one of them. Make sure that the clients definition matches the servers.

#Tip: You may want to replace 2001:db8:2::/64 with ::/0 if you want to configure a default route using full notation.

#Tip: When running this configuration, make sure that you use the -6 command-line flag (i.e., run the server in DHCPv6 mode, not in the default DHCPv4 mode) and that your machine running the server has an IPv6 address address assigned that belongs to subnet6.

#Client configuration

#The following configuration can be used by clients to retrieve routing information.
# Conf file for dhclient6
#script "/path/to/your/client-script.sh";

# Uncomment this if you want to request only default route
#option dhcp6.option-next-hop code 242 = { ip6-address, encapsulate routing6 };

# Use this definition to provision default or any other specific route
# with addtional information (metric and lifetime).

# NEXT_HOP option with RTPREFIX option included
#option dhcp6.next-hop-rtprefix code 242 = { ip6-address,
#   unsigned integer 16, unsigned integer 16,
#   unsigned integer 32,
#   unsigned integer 8, unsigned integer 8, ip6-address };

# Simplified mode (NEXT_HOP only, without RTPREFIX)
# Uncomment this if you want to send simplified default-route information
# Make sure that only simplified or full mode are uncommented, not both.
#option dhcp6.next-hop code 242 = ip6-address ;
# RTPREFIX option
#option dhcp6.rtprefix code 243 = {unsigned integer 32,
#   unsigned integer 8, unsigned integer 8, ip6-address };

# This specifies list of options that client will request.
#request dhcp6.name-servers, dhcp6.domain-search, dhcp6.rtprefix, dhcp6.next-hop-rtprefix;

